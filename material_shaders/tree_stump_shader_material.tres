[gd_resource type="ShaderMaterial" load_steps=6 format=3 uid="uid://cnwxnk8cr2gnp"]

[ext_resource type="Texture2D" uid="uid://b3y51c7hq1088" path="res://assets/folliage/tree_001_tree_texture.png" id="1_oj7tl"]
[ext_resource type="Texture2D" uid="uid://srply8oxs0rh" path="res://assets/folliage/tree_001_tree_001_tree_001_tree_texture.png" id="2_vwbpw"]
[ext_resource type="Texture2D" uid="uid://bvi16unbt6llc" path="res://assets/folliage/tree_001_tree_001_tree_001_tree_texture_n.png" id="3_akksc"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_o0ned"]
render_priority = -1
transparency = 4
blend_mode = 1
shading_mode = 0
albedo_color = Color(0, 0, 0, 0.435294)
albedo_texture = ExtResource("1_oj7tl")
heightmap_scale = 2.487
proximity_fade_distance = 1093.27
distance_fade_max_distance = 0.0

[sub_resource type="Shader" id="Shader_xkkio"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.2.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,depth_prepass_alpha;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_normal : hint_roughness_normal,filter_linear_mipmap,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform float sway_speed = 1.0;
uniform float sway_strength = 0.05;
uniform float sway_phase_len = 8.0;

uniform sampler2D SCEEN_TEXTURE: hint_screen_texture, filter_linear_mipmap;

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

uniform float clip_radius: hint_range(0.0, 10.0) = 0.5;

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMAL_MAP = texture(texture_normal,base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
	ALPHA *= albedo.a * albedo_tex.a;
}"

[resource]
resource_name = "Material.001"
render_priority = 0
next_pass = SubResource("StandardMaterial3D_o0ned")
shader = SubResource("Shader_xkkio")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/sway_speed = 1.0
shader_parameter/sway_strength = 0.05
shader_parameter/sway_phase_len = 8.0
shader_parameter/clip_radius = 1.2
shader_parameter/texture_albedo = ExtResource("2_vwbpw")
shader_parameter/texture_normal = ExtResource("3_akksc")
