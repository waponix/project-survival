[gd_resource type="ShaderMaterial" load_steps=4 format=3 uid="uid://dq76mkm4riu5x"]

[ext_resource type="Texture2D" uid="uid://dfshl7k38fdvl" path="res://assets/textures/water_ripple_001_sblurred.png" id="1_cxc2o"]
[ext_resource type="Texture2D" uid="uid://chqlbnrnxs3ah" path="res://assets/folliage/grass_001_grass_leaf_texture.png" id="2_atsjo"]

[sub_resource type="Shader" id="Shader_ia8uj"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.2.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform sampler2D WindNoise;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

global uniform vec3 player_position;

uniform float interact_power = 0.5;
uniform float radius = 1.0;


void vertex() {
// Input:4
	vec3 n_out4p0 = VERTEX;


// Input:15
	vec3 n_out15p0 = NODE_POSITION_WORLD;


// Input:18
	vec3 n_out18p0 = VERTEX;


// VectorOp:19
	vec3 n_out19p0 = n_out15p0 + n_out18p0;


// VectorDecompose:8
	float n_out8p0 = n_out19p0.x;
	float n_out8p1 = n_out19p0.y;
	float n_out8p2 = n_out19p0.z;


// VectorCompose:9
	vec2 n_out9p0 = vec2(n_out8p2, n_out8p0);


// Input:7
	float n_out7p0 = TIME;


// VectorOp:10
	vec2 n_out10p0 = n_out9p0 + vec2(n_out7p0);


// UVFunc:11
	vec2 n_in11p1 = vec2(0.50000, 0.50000);
	vec2 n_out11p0 = n_out10p0 * n_in11p1 + UV;


// VectorOp:14
	vec2 n_in14p1 = vec2(0.10000, 0.10000);
	vec2 n_out14p0 = n_out11p0 * n_in14p1;


	vec4 n_out12p0;
// Texture2D:12
	n_out12p0 = texture(WindNoise, n_out14p0);


// Input:5
	vec2 n_out5p0 = UV;


// VectorDecompose:2
	float n_out2p0 = n_out5p0.x;
	float n_out2p1 = n_out5p0.y;


// FloatFunc:3
	float n_out3p0 = 1.0 - n_out2p1;


// VectorOp:6
	vec3 n_out6p0 = vec3(n_out12p0.xyz) * vec3(n_out3p0);


// VectorOp:13
	vec3 n_in13p1 = vec3(0.05000, 0.05000, 0.05000);
	vec3 n_out13p0 = n_out6p0 * n_in13p1;


// VectorOp:16
	vec3 n_out16p0 = n_out4p0 + n_out13p0;


// Output:0
	VERTEX = n_out16p0;

	vec3 world_vert = (MODEL_MATRIX * vec4(VERTEX, 1.0)).xyz; // model space to world space
	vec3 direction = world_vert - player_position;
	direction.x = 0.0;
	direction = normalize(direction);
	float dist = distance(player_position, world_vert);
	float power = smoothstep(radius, 0.0, dist);
	direction = (vec4(direction, 1.0) * MODEL_MATRIX).xyz; // world space direction to model space
	VERTEX += direction * power * interact_power * (1.0 - UV.y);
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = textureLod(texture_albedo,base_uv, 0.2);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[resource]
resource_name = "Material.002"
render_priority = 0
shader = SubResource("Shader_ia8uj")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/interact_power = 0.5
shader_parameter/radius = 1.2
shader_parameter/WindNoise = ExtResource("1_cxc2o")
shader_parameter/texture_albedo = ExtResource("2_atsjo")
